202 635 6 5 0 0 40 5 40
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0 track 2
00 | 00009 0
00 | 00010 0
00 | 00011 0
00 | 00012 0 track 3
00 | 00013 0
00 | 00014 0
00 | 00015 0
00 | 00016 0 track 4
00 | 00017 0
00 | 00018 0
00 | 00019 0
00 | 00020 0 track 5
00 | 00021 0
00 | 00022 0
00 | 00023 0
00 | 00024 0 track 6
00 | 00025 0
00 | 00026 0
00 | 00027 0
00 | 00028 0000 wClock 0
00 | 00029 0001
00 | 00030 0002
00 | 00031 0003
00 | 00032 0004
00 | 00033 0005
00 | 00034 0006
00 | 00035 0007
00 | 00036 0008 wClock 1
00 | 00037 0009
00 | 00038 0010
00 | 00039 0011
00 | 00040 0012
00 | 00041 0013
00 | 00042 0014
00 | 00043 0015
00 | 00044 0016 wClock 2
00 | 00045 0017
00 | 00046 0018
00 | 00047 0019
00 | 00048 0020
00 | 00049 0021
00 | 00050 0022
00 | 00051 0023
00 | 00052 0024 wClock 3
00 | 00053 0025
00 | 00054 0026
00 | 00055 0027
00 | 00056 0028
00 | 00057 0029
00 | 00058 0030
00 | 00059 0031
00 | 00060 0032 wClock 4
00 | 00061 0033
00 | 00062 0034
00 | 00063 0035
00 | 00064 0036
00 | 00065 0037
00 | 00066 0038
00 | 00067 0039
00 | 00068 0040 inEvt 005 : TEMP
00 | 00069 0041           : 01 gates
00 | 00070 0042
00 | 00071 0043
00 | 00072 0044 inEvt 006 : PHOTO
00 | 00073 0045           : 01 gates
00 | 00074 0046
00 | 00075 0047
00 | 00076 0048 inEvt 043 : SEND_DONE_ACK
00 | 00077 0049           : 01 gates
00 | 00078 0050
00 | 00079 0051
00 | 00080 0052 inEvt 045 : RECEIVE
00 | 00081 0053           : 01 gates
00 | 00082 0054
00 | 00083 0055
00 | 00084 0056 inEvt 046 : Q_READY
00 | 00085 0057           : 01 gates
00 | 00086 0058
00 | 00087 0059
00 | 00088 0060 $ret:1, 
00 | 00089 0061 nodeId:2, 
00 | 00090 0062 
00 | 00091 0063 bsId:2, 
00 | 00092 0064 
00 | 00093 0065 parent:2, 
00 | 00094 0066 
00 | 00095 0067 tempMsg:25, 
00 | 00096 0068 
00 | 00097 0069 
00 | 00098 0070 
00 | 00099 0071 
00 | 00100 0072 
00 | 00101 0073 
00 | 00102 0074 
00 | 00103 0075 
00 | 00104 0076 
00 | 00105 0077 
00 | 00106 0078 
00 | 00107 0079 
00 | 00108 0080 
00 | 00109 0081 
00 | 00110 0082 
00 | 00111 0083 
00 | 00112 0084 
00 | 00113 0085 
00 | 00114 0086 
00 | 00115 0087 
00 | 00116 0088 
00 | 00117 0089 
00 | 00118 0090 
00 | 00119 0091 
00 | 00120 0092 photoMsg:25, 
00 | 00121 0093 
00 | 00122 0094 
00 | 00123 0095 
00 | 00124 0096 
00 | 00125 0097 
00 | 00126 0098 
00 | 00127 0099 
00 | 00128 0100 
00 | 00129 0101 
00 | 00130 0102 
00 | 00131 0103 
00 | 00132 0104 
00 | 00133 0105 
00 | 00134 0106 
00 | 00135 0107 
00 | 00136 0108 
00 | 00137 0109 
00 | 00138 0110 
00 | 00139 0111 
00 | 00140 0112 
00 | 00141 0113 
00 | 00142 0114 
00 | 00143 0115 
00 | 00144 0116 
00 | 00145 0117 recMsg:25, 
00 | 00146 0118 
00 | 00147 0119 
00 | 00148 0120 
00 | 00149 0121 
00 | 00150 0122 
00 | 00151 0123 
00 | 00152 0124 
00 | 00153 0125 
00 | 00154 0126 
00 | 00155 0127 
00 | 00156 0128 
00 | 00157 0129 
00 | 00158 0130 
00 | 00159 0131 
00 | 00160 0132 
00 | 00161 0133 
00 | 00162 0134 
00 | 00163 0135 
00 | 00164 0136 
00 | 00165 0137 
00 | 00166 0138 
00 | 00167 0139 
00 | 00168 0140 
00 | 00169 0141 
00 | 00170 0142 qMsg:25, 
00 | 00171 0143 
00 | 00172 0144 
00 | 00173 0145 
00 | 00174 0146 
00 | 00175 0147 
00 | 00176 0148 
00 | 00177 0149 
00 | 00178 0150 
00 | 00179 0151 
00 | 00180 0152 
00 | 00181 0153 
00 | 00182 0154 
00 | 00183 0155 
00 | 00184 0156 
00 | 00185 0157 
00 | 00186 0158 
00 | 00187 0159 
00 | 00188 0160 
00 | 00189 0161 
00 | 00190 0162 
00 | 00191 0163 
00 | 00192 0164 
00 | 00193 0165 
00 | 00194 0166 
00 | 00195 0167 ack:1, 
00 | 00196 0168 tempSeq:1, 
00 | 00197 0169 photoSeq:1, 
00 | 00198 0170 ParAnd_flag[2], 
00 | 00199 0171 
00 | 00200 0172 ParAnd_flag[2], 
00 | 00201 0173 
d1 | 00202 d1 set_c ushort 40 1281          | config gate TEMP with 1 await(s) - 0x0501 = 1281
28 | 00203 28 
05 | 00204 05 
01 | 00205 01 
d1 | 00206 d1 set_c ushort 44 1537          | config gate PHOTO with 1 await(s) - 0x0601 = 1537
2c | 00207 2c 
06 | 00208 06 
01 | 00209 01 
d1 | 00210 d1 set_c ushort 48 11009         | config gate SEND_DONE_ACK with 1 await(s) - 0x2b01 = 11009
30 | 00211 30 
2b | 00212 2b 
01 | 00213 01 
d1 | 00214 d1 set_c ushort 52 11521         | config gate RECEIVE with 1 await(s) - 0x2d01 = 11521
34 | 00215 34 
2d | 00216 2d 
01 | 00217 01 
d1 | 00218 d1 set_c ushort 56 11777         | config gate Q_READY with 1 await(s) - 0x2e01 = 11777
38 | 00219 38 
2e | 00220 2e 
01 | 00221 01 
24 | 00222 24 func 0                        | func getNodeId
00 | 00223 00 
a1 | 00224 a1 pop ushort 61                 | pop nodeId
3d | 00225 3d 
40 | 00226 40 push_c 7                      | push 7
07 | 00227 07 
24 | 00228 24 func 17                       | func setRFPower
11 | 00229 11 
17 | 00230 17 popx                          | popx 
40 | 00231 40 push_c 10                     | push 10
0a | 00232 0a 
40 | 00233 40 push_c 10                     | push 10
0a | 00234 0a 
91 | 00235 91 push_v ushort 61              | push nodeId:ushort
3d | 00236 3d 
09 | 00237 09 div                           | div
08 | 00238 08 mult                          | mult
a1 | 00239 a1 pop ushort 63                 | pop bsId
3f | 00240 3f 
40 | 00241 40 push_c 1                      | push 1
01 | 00242 01 
91 | 00243 91 push_v ushort 61              | push nodeId:ushort
3d | 00244 3d 
05 | 00245 05 sub                           | sub
a1 | 00246 a1 pop ushort 65                 | pop parent
41 | 00247 41 
40 | 00248 40 push_c 11                     | push 11
0b | 00249 0b 
91 | 00250 91 push_v ushort 61              | push nodeId:ushort
3d | 00251 3d 
0f | 00252 0f eq                            | eq
40 | 00253 40 push_c 0                      | push 0
00 | 00254 00 
16 | 00255 16 land                          | land
4f | 00256 4f ifelse 12 13                  | ifelse True_12 EndIf_13
01 | 00257 .00 addr:261
05 | 00258 .0c 
01 | 00259 .00 addr:267
0b | 00260 .0d 
c1 | 00261 c1 set_c ushort 65 1             | parent = 1
41 | 00262 41 
01 | 00263 01 
39 | 00264 39 exec 13                       | goto  13
01 | 00265 .00 addr:267
0b | 00266 .0d 
2a | 00267 2a set_v ushort 68 ushort 61     | tempMsg.source = nodeId
11 | 00268 11 
44 | 00269 44 
3d | 00270 3d 
c0 | 00271 c0 set_c ubyte 72 0              | tempMsg.d8[0] = 0
48 | 00272 48 
00 | 00273 00 
2a | 00274 2a set_v ushort 82 ushort 61     | tempMsg.d16[3] = nodeId
11 | 00275 11 
52 | 00276 52 
3d | 00277 3d 
2a | 00278 2a set_v ushort 93 ushort 61     | photoMsg.source = nodeId
11 | 00279 11 
5d | 00280 5d 
3d | 00281 3d 
c0 | 00282 c0 set_c ubyte 97 0              | photoMsg.d8[0] = 0
61 | 00283 61 
00 | 00284 00 
2a | 00285 2a set_v ushort 107 ushort 61    | photoMsg.d16[3] = nodeId
11 | 00286 11 
6b | 00287 6b 
3d | 00288 3d 
c0 | 00289 c0 set_c ubyte 168 0             | tempSeq = 0
a8 | 00290 a8 
00 | 00291 00 
c0 | 00292 c0 set_c ubyte 169 0             | photoSeq = 0
a9 | 00293 a9 
00 | 00294 00 
24 | 00295 24 func 13                       | func qClear
0d | 00296 0d 
17 | 00297 17 popx                          | popx 
89 | 00298 89 tkins_max 0 21                | insert track ParEver_sub_1_21
01 | 00299 .00 addr:308
34 | 00300 .15 
89 | 00301 89 tkins_max 0 22                | insert track ParEver_sub_2_22
01 | 00302 .00 addr:490
ea | 00303 .16 
89 | 00304 89 tkins_max 0 23                | insert track ParEver_sub_3_23
01 | 00305 .00 addr:510
fe | 00306 .17 
01 | 00307 01 end                           | end
89 | 00308 89 tkins_max 0 27                | insert track ParEver_sub_1_27
01 | 00309 .00 addr:315
3b | 00310 .1b 
89 | 00311 89 tkins_max 0 28                | insert track ParEver_sub_2_28
01 | 00312 .00 addr:401
91 | 00313 .1c 
01 | 00314 01 end                           | end
40 | 00315 40 push_c 100                    | push 100
64 | 00316 64 
91 | 00317 91 push_v ushort 61              | push nodeId:ushort
3d | 00318 3d 
08 | 00319 08 mult                          | mult
27 | 00320 27 clken_e 0 0 33                | clock enable Awake_exp_33 (stack)ms
01 | 00321 01 
00 | 00322 00 
01 | 00323 .00 addr:326
46 | 00324 .21 
01 | 00325 01 end                           | end
48 | 00326 48 memclr 170 2                  | clear gates from addr 170 to addr 171
aa | 00327 aa 
02 | 00328 02 
89 | 00329 89 tkins_max 0 37                | insert track ParAnd_sub_1_37
01 | 00330 .00 addr:336
50 | 00331 .25 
89 | 00332 89 tkins_max 0 38                | insert track ParAnd_sub_2_38
01 | 00333 .00 addr:371
73 | 00334 .26 
01 | 00335 01 end                           | end
26 | 00336 26 outevt_z 9                    | emit REQ_TEMP
09 | 00337 09 
d1 | 00338 d1 set_c ushort 42 43            | await TEMP[0]
2a | 00339 2a 
01 | 00340 .00 addr:343
57 | 00341 .2b 
01 | 00342 01 end                           | end
40 | 00343 40 push_c 76                     | push_c tempMsg.d16[0]
4c | 00344 4c 
34 | 00345 34 getextdt_e 2                  | getExtData stack len=2
02 | 00346 02 
40 | 00347 40 push_c 168                    | push &tempSeq
a8 | 00348 a8 
60 | 00349 60 inc ubyte                     | inc ubyte
2a | 00350 2a set_v ubyte 72 ubyte 168      | tempMsg.d8[0] = tempSeq
00 | 00351 00 
48 | 00352 48 
a8 | 00353 a8 
c0 | 00354 c0 set_c ubyte 74 0              | tempMsg.d8[2] = 0
4a | 00355 4a 
00 | 00356 00 
c0 | 00357 c0 set_c ubyte 67 1              | tempMsg.type = 1
43 | 00358 43 
01 | 00359 01 
40 | 00360 40 push_c 67                     | push_c &tempMsg:usrMsg
43 | 00361 43 
24 | 00362 24 func 10                       | func qPut
0a | 00363 0a 
17 | 00364 17 popx                          | popx 
c0 | 00365 c0 set_c ubyte 170 1             | open gate 1
aa | 00366 aa 
01 | 00367 01 
39 | 00368 39 exec 39                       | goto  39
01 | 00369 .00 addr:385
81 | 00370 .27 
40 | 00371 40 push_c 5                      | push 5
05 | 00372 05 
27 | 00373 27 clken_e 1 1 46                | clock enable Awake_exp_46 (stack)s
11 | 00374 11 
01 | 00375 01 
01 | 00376 .00 addr:379
7b | 00377 .2e 
01 | 00378 01 end                           | end
c0 | 00379 c0 set_c ubyte 171 1             | open gate 2
ab | 00380 ab 
01 | 00381 01 
39 | 00382 39 exec 39                       | goto  39
01 | 00383 .00 addr:385
81 | 00384 .27 
3a | 00385 3a chkret 170                    | ParAnd_out_40 -- if (gate 0 == 0) PC=PC+1
aa | 00386 aa 
01 | 00387 01 end                           | end
3a | 00388 3a chkret 171                    | ParAnd_out_40 -- if (gate 1 == 0) PC=PC+1
ab | 00389 ab 
01 | 00390 01 end                           | end
39 | 00391 39 exec 34                       | goto  34
01 | 00392 .00 addr:326
46 | 00393 .22 
48 | 00394 48 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 00395 08 
08 | 00396 08 
48 | 00397 48 memclr 42 2                   | clear EXT gates for TEMP
2a | 00398 2a 
02 | 00399 02 
01 | 00400 01 end                           | end
40 | 00401 40 push_c 50                     | push 50
32 | 00402 32 
40 | 00403 40 push_c 100                    | push 100
64 | 00404 64 
91 | 00405 91 push_v ushort 61              | push nodeId:ushort
3d | 00406 3d 
08 | 00407 08 mult                          | mult
06 | 00408 06 add                           | add
27 | 00409 27 clken_e 2 0 48                | clock enable Awake_exp_48 (stack)ms
01 | 00410 01 
02 | 00411 02 
01 | 00412 .00 addr:415
9f | 00413 .30 
01 | 00414 01 end                           | end
48 | 00415 48 memclr 172 2                  | clear gates from addr 172 to addr 173
ac | 00416 ac 
02 | 00417 02 
89 | 00418 89 tkins_max 0 52                | insert track ParAnd_sub_1_52
01 | 00419 .00 addr:425
a9 | 00420 .34 
89 | 00421 89 tkins_max 0 53                | insert track ParAnd_sub_2_53
01 | 00422 .00 addr:460
cc | 00423 .35 
01 | 00424 01 end                           | end
26 | 00425 26 outevt_z 10                   | emit REQ_PHOTO
0a | 00426 0a 
d1 | 00427 d1 set_c ushort 46 58            | await PHOTO[0]
2e | 00428 2e 
01 | 00429 .00 addr:432
b0 | 00430 .3a 
01 | 00431 01 end                           | end
40 | 00432 40 push_c 101                    | push_c photoMsg.d16[0]
65 | 00433 65 
34 | 00434 34 getextdt_e 2                  | getExtData stack len=2
02 | 00435 02 
40 | 00436 40 push_c 169                    | push &photoSeq
a9 | 00437 a9 
60 | 00438 60 inc ubyte                     | inc ubyte
2a | 00439 2a set_v ubyte 97 ubyte 169      | photoMsg.d8[0] = photoSeq
00 | 00440 00 
61 | 00441 61 
a9 | 00442 a9 
c0 | 00443 c0 set_c ubyte 99 0              | photoMsg.d8[2] = 0
63 | 00444 63 
00 | 00445 00 
c0 | 00446 c0 set_c ubyte 92 2              | photoMsg.type = 2
5c | 00447 5c 
02 | 00448 02 
40 | 00449 40 push_c 92                     | push_c &photoMsg:usrMsg
5c | 00450 5c 
24 | 00451 24 func 10                       | func qPut
0a | 00452 0a 
17 | 00453 17 popx                          | popx 
c0 | 00454 c0 set_c ubyte 172 1             | open gate 1
ac | 00455 ac 
01 | 00456 01 
39 | 00457 39 exec 54                       | goto  54
01 | 00458 .00 addr:474
da | 00459 .36 
40 | 00460 40 push_c 8                      | push 8
08 | 00461 08 
27 | 00462 27 clken_e 3 1 61                | clock enable Awake_exp_61 (stack)s
11 | 00463 11 
03 | 00464 03 
01 | 00465 .00 addr:468
d4 | 00466 .3d 
01 | 00467 01 end                           | end
c0 | 00468 c0 set_c ubyte 173 1             | open gate 2
ad | 00469 ad 
01 | 00470 01 
39 | 00471 39 exec 54                       | goto  54
01 | 00472 .00 addr:474
da | 00473 .36 
3a | 00474 3a chkret 172                    | ParAnd_out_55 -- if (gate 0 == 0) PC=PC+1
ac | 00475 ac 
01 | 00476 01 end                           | end
3a | 00477 3a chkret 173                    | ParAnd_out_55 -- if (gate 1 == 0) PC=PC+1
ad | 00478 ad 
01 | 00479 01 end                           | end
39 | 00480 39 exec 49                       | goto  49
01 | 00481 .00 addr:415
9f | 00482 .31 
48 | 00483 48 memclr 24 8                   | clear WClocks gates from 3 to 4
18 | 00484 18 
08 | 00485 08 
48 | 00486 48 memclr 46 2                   | clear EXT gates for PHOTO
2e | 00487 2e 
02 | 00488 02 
01 | 00489 01 end                           | end
d1 | 00490 d1 set_c ushort 54 65            | await RECEIVE[0]
36 | 00491 36 
01 | 00492 .00 addr:495
ef | 00493 .41 
01 | 00494 01 end                           | end
5c | 00495 5c getextdt_v 117 25             | getExtData recMsg 25
75 | 00496 75 
19 | 00497 19 
40 | 00498 40 push_c 117                    | push_c &recMsg:usrMsg
75 | 00499 75 
24 | 00500 24 func 10                       | func qPut
0a | 00501 0a 
17 | 00502 17 popx                          | popx 
39 | 00503 39 exec 62                       | goto  62
01 | 00504 .00 addr:490
ea | 00505 .3e 
48 | 00506 48 memclr 54 2                   | clear EXT gates for RECEIVE
36 | 00507 36 
02 | 00508 02 
01 | 00509 01 end                           | end
d1 | 00510 d1 set_c ushort 58 70            | await Q_READY[0]
3a | 00511 3a 
02 | 00512 .00 addr:515
03 | 00513 .46 
01 | 00514 01 end                           | end
40 | 00515 40 push_c 0                      | push 0
00 | 00516 00 
24 | 00517 24 func 12                       | func qSize
0c | 00518 0c 
13 | 00519 13 gt                            | gt
4f | 00520 4f ifelse 94 95                  | ifelse True_94 False_95
02 | 00521 .00 addr:525
0d | 00522 .5e 
02 | 00523 .00 addr:604
5c | 00524 .5f 
40 | 00525 40 push_c 142                    | push_c &qMsg:usrMsg
8e | 00526 8e 
24 | 00527 24 func 11                       | func qGet
0b | 00528 0b 
17 | 00529 17 popx                          | popx 
2a | 00530 2a set_v ushort 145 ushort 65    | qMsg.target = parent
11 | 00531 11 
91 | 00532 91 
41 | 00533 41 
b1 | 00534 b1 outevt_v 41 142               | emit SEND_ACK len=25 var=qMsg
29 | 00535 29 
8e | 00536 8e 
d1 | 00537 d1 set_c ushort 50 82            | await SEND_DONE_ACK[0]
32 | 00538 32 
02 | 00539 .00 addr:542
1e | 00540 .52 
01 | 00541 01 end                           | end
5c | 00542 5c getextdt_v 167 1              | getExtData ack 1
a7 | 00543 a7 
01 | 00544 01 
90 | 00545 90 push_v ubyte 167              | push ack:ubyte
a7 | 00546 a7 
4f | 00547 4f ifelse 91 92                  | ifelse True_91 False_92
02 | 00548 .00 addr:552
28 | 00549 .5b 
02 | 00550 .00 addr:560
30 | 00551 .5c 
3d | 00552 3d tkins_z 1 15 81               | insert track Loop_out_81 tree 15
8f | 00553 8f 
02 | 00554 .00 addr:595
53 | 00555 .51 
01 | 00556 01 end                           | end
39 | 00557 39 exec 93                       | goto  93
02 | 00558 .00 addr:537
19 | 00559 .4f 
40 | 00560 40 push_c 149                    | push_c qMsg.d8[2]
95 | 00561 95 
60 | 00562 60 inc ubyte                     | inc ubyte
40 | 00563 40 push_c 6                      | push 6
06 | 00564 06 
90 | 00565 90 push_v ubyte 149                    | push_v ubyte qMsg.d8[2] [Optm:: push_c addr + deref]
95 | 00566 95 
13 | 00567 13 gt                            | gt
4f | 00568 4f ifelse 85 86                  | ifelse True_85 EndIf_86
02 | 00569 .00 addr:573
3d | 00570 .55 
02 | 00571 .00 addr:581
45 | 00572 .56 
3d | 00573 3d tkins_z 1 15 81               | insert track Loop_out_81 tree 15
8f | 00574 8f 
02 | 00575 .00 addr:595
53 | 00576 .51 
01 | 00577 01 end                           | end
39 | 00578 39 exec 86                       | goto  86
02 | 00579 .00 addr:581
45 | 00580 .56 
29 | 00581 29 clken_c 4 1000 87             | clock enable Awake_1000_87 1000msec
03 | 00582 03 
04 | 00583 04 
03 | 00584 03 
e8 | 00585 e8 
02 | 00586 .00 addr:589
4d | 00587 .57 
01 | 00588 01 end                           | end
b1 | 00589 b1 outevt_v 41 142               | emit SEND_ACK len=25 var=qMsg
29 | 00590 29 
8e | 00591 8e 
39 | 00592 39 exec 93                       | goto  93
02 | 00593 .00 addr:537
19 | 00594 .4f 
48 | 00595 48 memclr 32 8                   | clear WClocks gates from 4 to 5
20 | 00596 20 
08 | 00597 08 
48 | 00598 48 memclr 50 2                   | clear EXT gates for SEND_DONE_ACK
32 | 00599 32 
02 | 00600 02 
39 | 00601 39 exec 96                       | goto  96
02 | 00602 .00 addr:515
03 | 00603 .47 
3d | 00604 3d tkins_z 1 10 73               | insert track Loop_out_73 tree 10
8a | 00605 8a 
02 | 00606 .00 addr:612
64 | 00607 .49 
01 | 00608 01 end                           | end
39 | 00609 39 exec 96                       | goto  96
02 | 00610 .00 addr:515
03 | 00611 .47 
48 | 00612 48 memclr 32 8                   | clear WClocks gates from 4 to 5
20 | 00613 20 
08 | 00614 08 
48 | 00615 48 memclr 50 2                   | clear EXT gates for SEND_DONE_ACK
32 | 00616 32 
02 | 00617 02 
39 | 00618 39 exec 67                       | goto  67
01 | 00619 .00 addr:510
fe | 00620 .43 
48 | 00621 48 memclr 32 8                   | clear WClocks gates from 4 to 5
20 | 00622 20 
08 | 00623 08 
48 | 00624 48 memclr 50 2                   | clear EXT gates for SEND_DONE_ACK
32 | 00625 32 
02 | 00626 02 
48 | 00627 48 memclr 58 2                   | clear EXT gates for Q_READY
3a | 00628 3a 
02 | 00629 02 
01 | 00630 01 end                           | end
48 | 00631 48 memclr 0 40                   | clear WClocks gates from 0 to 5
00 | 00632 00 
28 | 00633 28 
01 | 00634 01 end                           | end
